{"version":3,"file":"component---src-templates-blog-list-js-f644ea740570bef28a7a.js","mappings":"4NACA,EAAwB,4BAAxB,EAA2D,2B,UC0D3D,EAxDkB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YACXC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,IAAMA,EAAc,GAAGK,WAC1DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,gCACE,sBACEE,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,WAAY,SACZC,UAAW,OACXC,WAAY,OACZC,YAAa,UAGbZ,GACA,gBAAC,KAAD,CAAMa,GAAE,SAAWX,EAAYY,IAAI,QAAnC,cAIDC,MAAMC,KAAK,CAAEC,OAAQlB,IAAY,SAACmB,EAAGC,GAAJ,OAChC,sBACEC,IAAG,qBAAsBD,EAAI,GAC7Bd,MAAO,CACLgB,OAAQ,IAGV,gBAAC,KAAD,CACER,GAAE,UAAiB,IAANM,EAAU,GAAKA,EAAI,GAChCd,MAAO,CACLiB,QAAS,OACTC,UAAW,OACXC,eAAgB,OAChBC,MAAON,EAAI,IAAMrB,EAAc,UAAY,GAC3C4B,WAAYP,EAAI,IAAMrB,EAAc,UAAY,KAGjDqB,EAAI,QAITlB,GACA,gBAAC,KAAD,CAAMY,GAAE,SAAWT,EAAYU,IAAI,QAAnC,aCrBV,EAtBiB,SAAC,GAA2B,IAAzBa,EAAwB,EAAxBA,KAAM9B,EAAkB,EAAlBA,YACxB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAM+B,MAAM,SACZ,kCACA,sBAAIC,UAAWC,GACZH,EAAKI,kBAAkBC,MAAMC,KAAI,SAACC,GACjC,OACE,sBAAIL,UAAWC,EAAiBV,IAAKc,EAAKC,KAAKC,OAAOC,MACpD,gBAAC,KAAD,CAAMxB,GAAE,SAAWqB,EAAKC,KAAKC,OAAOC,MAClC,0BAAKH,EAAKC,KAAKG,YAAYV,OAC3B,yBAAIM,EAAKC,KAAKG,YAAYC,YAMpC,gBAAC,EAAD,CAAW1C,YAAaA","sources":["webpack://gatsby-starter-hello-world/./src/pages/blog.module.scss","webpack://gatsby-starter-hello-world/./src/components/paginator.js","webpack://gatsby-starter-hello-world/./src/templates/blogList.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"blog-module--posts--p4vu7\",\"post\":\"blog-module--post--AganZ\"};","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst Paginator = ({ pageContext }) => {\n  const { currentPage, numPages } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <>\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          listStyle: 'none',\n          paddingTop: '1rem',\n          marginRight: '2rem',\n        }}\n      >\n        {!isFirst && (\n          <Link to={`/blog/${prevPage}`} rel=\"prev\">\n            ← Previous\n          </Link>\n        )}\n        {Array.from({ length: numPages }, (_, i) => (\n          <li\n            key={`pagination-number${i + 1}`}\n            style={{\n              margin: 0,\n            }}\n          >\n            <Link\n              to={`/blog/${i === 0 ? '' : i + 1}`}\n              style={{\n                padding: '1rem',\n                marginTop: '2rem',\n                textDecoration: 'none',\n                color: i + 1 === currentPage ? '#000000' : '',\n                background: i + 1 === currentPage ? '#f4f4f4' : '',\n              }}\n            >\n              {i + 1}\n            </Link>\n          </li>\n        ))}\n        {!isLast && (\n          <Link to={`/blog/${nextPage}`} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport blogStyles from '../pages/blog.module.scss';\nimport Head from '../components/head';\nimport Paginator from '../components/paginator';\n\nconst BlogPage = ({ data, pageContext }) => {\n  return (\n    <Layout>\n      <Head title=\"Blog\" />\n      <h1>Blog</h1>\n      <ol className={blogStyles.posts}>\n        {data.allMarkdownRemark.edges.map((edge) => {\n          return (\n            <li className={blogStyles.post} key={edge.node.fields.slug}>\n              <Link to={`/blog/${edge.node.fields.slug}`}>\n                <h2>{edge.node.frontmatter.title}</h2>\n                <p>{edge.node.frontmatter.date}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ol>\n      <Paginator pageContext={pageContext} />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","style","display","flexWrap","justifyContent","alignItems","listStyle","paddingTop","marginRight","to","rel","Array","from","length","_","i","key","margin","padding","marginTop","textDecoration","color","background","data","title","className","blogStyles","allMarkdownRemark","edges","map","edge","node","fields","slug","frontmatter","date"],"sourceRoot":""}